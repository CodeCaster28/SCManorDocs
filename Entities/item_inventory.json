{
  "Classname": "item_inventory",
  "Description": "Highly customizable item that can be stored in player inventory based on visual interface, and applies bunch of optional effects on players. Item_inventory contains a lot of trigger conditions. It's possible to make other entities require specific item, abort to have an item, force to drop item e.t.c. You can also make this item usable at player's will from inventory menu (self-activation). This is how you can implement gas masks, invincibility, speed boots, healing potions, keys to locked doors, remote controllers, capture the flag, air tanks and many more! Those entities are fully integrated with item_inventory, each including inventory related keyvalues: \n1. [func_button](../func_button)\n2. [func_door](../func_door)\n3. [func_door_rotating](../func_door_rotating)\n4. [func_rot_button](../func_rot_button)\n5. [func_tankcontrols](../func_tankcontrols)\n6. [func_traincontrols](../func_traincontrols)\n7. [momentary_door](../momentary_door)\n8. [trigger_changelevel](../trigger_changelevel)\n9. [trigger_hurt](../trigger_hurt)\n10. [trigger_multiple](../trigger_multiple)\n11. [trigger_once](../trigger_once)\n12. [trigger_teleport](../trigger_teleport)\n13. [func_water](../func_water)",
  "KeyDescriptions": [
    {
      "keyName": "targetname",
      "keyDescription": "Set name of {{ entname }} so other entities can trigger it. Only 'On' and 'Toggle' trigger use-types are accepted which makes item be picked up by player '!activator'. Kill-targeting this entity will remove {{ entname }} and stop it from respawning, also removing from inventory.",
      "keyChoices": []
    },
    {
      "keyName": "target",
      "keyDescription": "Entity to trigger when item is picked up. Trigger use-type is 'Toggle'.",
      "keyChoices": []
    },
    {
      "keyName": "item_name",
      "keyDescription": "Name of the item to refer to. This is not a \"targetname\". You can trigger this item by a \"targetname\" and you can refer to this item by it's \"Item name\".",
      "keyChoices": []
    },
    {
      "keyName": "item_group",
      "keyDescription": "You can assign this item to group. You can refer to item group from other item-related keyvalues as well.",
      "keyChoices": []
    },
    {
      "keyName": "display_name",
      "keyDescription": "It's a display name of item that show up at the inventory menu window.",
      "keyChoices": []
    },
    {
      "keyName": "description",
      "keyDescription": "It's a description of the item player can read at the the inventory menu window.",
      "keyChoices": []
    },
    {
      "keyName": "item_icon",
      "keyDescription": "Name of the sprite file to use as item hud icon. Provide the full file name and path relative to the 'sprites' directory.",
      "keyChoices": []
    },
    {
      "keyName": "activate_limit",
      "keyDescription": "If \"Holder:Allowed to self-activate\" is set to 'Yes', this is a number of times player can activate this item.",
      "keyChoices": []
    },
    {
      "keyName": "collect_limit",
      "keyDescription": "How many item duplicates player can hold in his inventory. '0' for no limit.",
      "keyChoices": []
    },
    {
      "keyName": "weight",
      "keyDescription": "Item weight. The limit for all items in inventory is '100', Over that value player cannot pick up more items.",
      "keyChoices": []
    },
    {
      "keyName": "filter_targetnames",
      "keyDescription": "Only enitites with given name(s) can pick up this item.",
      "keyChoices": []
    },
    {
      "keyName": "filter_classnames",
      "keyDescription": "Optional filter. Only entities with given class(es) can pick up this item.",
      "keyChoices": []
    },
    {
      "keyName": "filter_teams",
      "keyDescription": "Optional filter. Only players that are part of given team(s) name can pick up this item.",
      "keyChoices": []
    },
    {
      "keyName": "filter_npc_classifications",
      "keyDescription": "Optional filter. Only Monsters with given class(es) are able to pick up this item.",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": "Keep default."
        },
        {
          "choiceValue": "-1 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "2 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "3 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "4 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "5 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "6 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "7 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "8 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "9 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "10 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "11 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "12 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "13 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "14 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "15 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "16 ",
          "choiceDescription": "Use it to classify to custom team."
        },
        {
          "choiceValue": "17 ",
          "choiceDescription": "Use it to classify to custom team."
        },
        {
          "choiceValue": "18 ",
          "choiceDescription": "Use it to classify to custom team."
        },
        {
          "choiceValue": "19 ",
          "choiceDescription": "Use it to classify to custom team."
        }
      ]
    },
    {
      "keyName": "item_name_required",
      "keyDescription": "Name of required item(s) (held in inventory) to pick up this item.",
      "keyChoices": []
    },
    {
      "keyName": "item_group_required",
      "keyDescription": "Name of group(s) (in which item(s) from player inventory belongs) required to pick up this item.",
      "keyChoices": []
    },
    {
      "keyName": "item_group_required_num",
      "keyDescription": "Total number of items that are part of specified group(s) required to pick up this item. Specify a group names in keyvalue above.",
      "keyChoices": []
    },
    {
      "keyName": "item_name_moved",
      "keyDescription": "Allow to pick up this item only when specified item_inventory wasn't relocated yet (and is not in someone's inventory).",
      "keyChoices": []
    },
    {
      "keyName": "item_name_canthave",
      "keyDescription": "Name of item(s) in player inventory that prevents from picking up this item off the ground.",
      "keyChoices": []
    },
    {
      "keyName": "item_group_canthave",
      "keyDescription": "Name of group(s) (in which item(s) from player inventory belongs) that prevents from picking up this item off the ground.",
      "keyChoices": []
    },
    {
      "keyName": "item_group_canthave_num",
      "keyDescription": "Total number of items that are part of specified group(s) that prevents from picking up this item from a ground. Specify a group names in keyvalue above.",
      "keyChoices": []
    },
    {
      "keyName": "item_name_not_moved",
      "keyDescription": "Allow to pick up this item only when specified entities (of item_inventory class) has been moved from it's starting position.",
      "keyChoices": []
    },
    {
      "keyName": "carried_hidden",
      "keyDescription": "Hide item from 3rd person view. When 'No' is selected, the item model is floating above player head when equipped.",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        }
      ]
    },
    {
      "keyName": "carried_skin",
      "keyDescription": "Change models' skin of carried item (only when it's not hidden).",
      "keyChoices": []
    },
    {
      "keyName": "carried_body",
      "keyDescription": "Change models' body of carried item (only when it's not hidden).",
      "keyChoices": []
    },
    {
      "keyName": "carried_sequencename",
      "keyDescription": "Change models' sequence of carried item (only when it's not hidden).",
      "keyChoices": []
    },
    {
      "keyName": "carried_sequence",
      "keyDescription": "Change models' sequence by specifying it's number.",
      "keyChoices": []
    },
    {
      "keyName": "return_timelimit",
      "keyDescription": "After this amount of time the item returns to it's starting position (when dropped somewhere else).",
      "keyChoices": []
    },
    {
      "keyName": "return_delay_respawn",
      "keyDescription": "Allows to specify if item_inventory will wait for respawn after returning to it's default position.",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        }
      ]
    },
    {
      "keyName": "holder_timelimit",
      "keyDescription": "Maximum time the item can be held on for, then it's returning if possible.",
      "keyChoices": []
    },
    {
      "keyName": "holder_time_activate_wait",
      "keyDescription": "If 'Holder:Allowed to self-activate' is set to 'Yes', this is a delay between which player can activate this item.",
      "keyChoices": []
    },
    {
      "keyName": "holder_time_wearout",
      "keyDescription": "Time before \"Holder: Hold time limit\" reach it's limit to trigger target specified in \"Target: On wearing out\" keyvalue. If you set it to e.g. 4, it will trigger a target 4 seconds before this item's \"Holder: Hold time limit\" ends. It's useful if you want to trigger a sound or a [game_text](../game_text) informing player that item will be worn out soon. Example: player picked up power-up which have \"Holder: Hold time limit\" set to 10, and \"Holder: Wearing out trigger time\" to 3, so 3 seconds before item is removed from player (in other words, before \"Holder: Hold time limit\" ends) game_text specified in \"Target: On wearing out\" is triggered with message \"Warning! 3 seconds for buff to end!\".",
      "keyChoices": []
    },
    {
      "keyName": "holder_can_activate",
      "keyDescription": "Set it to 'Yes' allows players to activate this item by themselves from inventory menu.",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        }
      ]
    },
    {
      "keyName": "holder_timelimit_wait_until_activated",
      "keyDescription": "If set to 'Yes', hold time limit doesn't start until item is activated by player through inventory menu.",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        }
      ]
    },
    {
      "keyName": "holder_can_drop",
      "keyDescription": "Determines whenever item can be dropped manually by player from within inventory menu.",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        }
      ]
    },
    {
      "keyName": "holder_keep_on_death",
      "keyDescription": "Self-explanatory. Note that player will lost this item after respawn if keyvalue below isn't set to 'Yes'.",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        }
      ]
    },
    {
      "keyName": "holder_keep_on_respawn",
      "keyDescription": "Self-explanatory. Remember that player can also lose his item on death, if \"Keep item on death\" is set to 'No', the player won't keep this item.",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        }
      ]
    },
    {
      "keyName": "target_on_collect",
      "keyDescription": "Trigger specified target(s) when item is successfully collected (uses 'Toggle' trigger state). Player who collected it is passed as the '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_collect_team",
      "keyDescription": "Same as above, but passes whole team (in which player belongs, including this player) as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_collect_other",
      "keyDescription": "Same as above, but passes everyone else but player as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_cant_collect",
      "keyDescription": "Trigger specified target(s) when item collecting attempt failed (uses 'Toggle' trigger state). Player who failed to collect item is passed as the '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_cant_collect_team",
      "keyDescription": "Same as above, but passes whole team (in which player belongs, including this player) as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_cant_collect_other",
      "keyDescription": "Same as above, but passes everyone else but player as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_drop",
      "keyDescription": "Trigger specified target(s) when item is dropped (uses 'Toggle' trigger state). Player who dropped it is passed as the '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_drop_team",
      "keyDescription": "Same as above, but passes whole team (in which player belongs, including this player) as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_drop_other",
      "keyDescription": "Same as above, but passes everyone else but player as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_cant_drop",
      "keyDescription": "Trigger specified target(s) when item is drop failed (uses 'Toggle' trigger state). Player who failed dropping item it is passed as the '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_cant_drop_team",
      "keyDescription": "Same as above, but passes whole team (in which player belongs, including this player) as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_cant_drop_other",
      "keyDescription": "Same as above, but passes everyone else but player as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_activate",
      "keyDescription": "Trigger specified target(s) when player activate item from inventory menu, only if \"Allowed to self-activate\" is set to 'Yes' (uses 'Toggle' trigger state). Player who activated it is passed as the '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_activate_team",
      "keyDescription": "Same as above, but passes whole team (in which player belongs, including this player) as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_activate_other",
      "keyDescription": "Same as above, but passes everyone else but player as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_cant_activate",
      "keyDescription": "If \"Allowed to self-activate\" is set to 'Yes' and item activation limit hit 0, this is a target to trigger when player attempts to activate it again (uses 'Toggle' trigger state). Player who failed it is passed as the '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_cant_activate_team",
      "keyDescription": "Same as above, but passes whole team (in which player belongs, including this player) as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_cant_activate_other",
      "keyDescription": "Same as above, but passes everyone else but player as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_use",
      "keyDescription": "Trigger specified target(s) when item is used by trigger (uses 'Toggle' trigger state). Player is passed as the 'activator!'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_use_team",
      "keyDescription": "Same as above, but passes whole team (in which player belongs, including this player) as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_use_other",
      "keyDescription": "Same as above, but passes everyone else but player as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_wearing_out",
      "keyDescription": "Trigger specified target(s) when item's \"Wearing out trigger time\" ends (which must be greater than 0 but less than \"Holder: Hold time limit\" value), see \"Holder: Wearing out trigger time\" above for more info (uses 'Toggle' trigger state). Player who owns this item is passed as the '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_wearing_out_team",
      "keyDescription": "Same as above, but passes whole team (in which player belongs, including this player) as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_wearing_out_other",
      "keyDescription": "Same as above, but passes everyone else but player as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_return",
      "keyDescription": "Trigger specified target(s) when item returns to it's starting position (uses 'Toggle' trigger state).",
      "keyChoices": []
    },
    {
      "keyName": "target_on_return_team",
      "keyDescription": "Same as above, but passes whole team (in which player belongs, including this player) as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_return_other",
      "keyDescription": "Same as above, but passes everyone else but player as '!activator'.",
      "keyChoices": []
    },
    {
      "keyName": "target_on_materialise",
      "keyDescription": "Trigger specified target when item gets materialised after a drop or return (uses 'Toggle' trigger state).",
      "keyChoices": []
    },
    {
      "keyName": "target_on_destroy",
      "keyDescription": "Trigger specified target when item gets destroyed by environment (uses 'Toggle' trigger state).",
      "keyChoices": []
    },
    {
      "keyName": "effects_wait_until_activated",
      "keyDescription": "If \"Allowed to self-activate\" is set to 'Yes', this will determine if effects should be applied only when player activate an item from inventory menu.",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        }
      ]
    },
    {
      "keyName": "effects_permanent",
      "keyDescription": "Specify if effects below effect applied on player are permanent ('Yes') or temporary ('No'). If option 'No' is chosen, the effects ends after \"Holder: Hold Time Limit\" is hit, and if 'Yes' is selected, effect ends after respawn.",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        }
      ]
    },
    {
      "keyName": "effect_glow",
      "keyDescription": "Color of glow shell effect to apply. '0 0 0' for none.",
      "keyChoices": []
    },
    {
      "keyName": "effect_block_weapons",
      "keyDescription": "Prevent player from using weapons ('Yes'/'No').",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        }
      ]
    },
    {
      "keyName": "effect_invulnerable",
      "keyDescription": "Makes player invulnerable ('Yes'/'No').",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        }
      ]
    },
    {
      "keyName": "effect_invisible",
      "keyDescription": "Makes player invisible (for enemies) ('Yes'/'No').",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        }
      ]
    },
    {
      "keyName": "effect_nonsolid",
      "keyDescription": "Makes player not-solid for different dynamic objects ('Yes'/'No').",
      "keyChoices": [
        {
          "choiceValue": "0 ",
          "choiceDescription": ""
        },
        {
          "choiceValue": "1 ",
          "choiceDescription": ""
        }
      ]
    },
    {
      "keyName": "effect_respiration",
      "keyDescription": "Additional amount of time before drown (can be negative!).",
      "keyChoices": []
    },
    {
      "keyName": "effect_friction",
      "keyDescription": "Percent of friction to change on player.",
      "keyChoices": []
    },
    {
      "keyName": "effect_gravity",
      "keyDescription": "Percent of gravity to change on player.",
      "keyChoices": []
    },
    {
      "keyName": "effect_speed",
      "keyDescription": "Percent of speed to change on player. Weapon_minigun does not affect this value.",
      "keyChoices": []
    },
    {
      "keyName": "effect_damage",
      "keyDescription": "Player damage modifier in percent.",
      "keyChoices": []
    }
  ],
  "Notes": [
    "Use semicolon ';' to separate multiple item/target/group names in filters and conditions.",
    "If both 'TOUCH only' and 'USE only' flags are selected, the item can only be collected by trigger, but only if player is the !activator.",
    "Item can be collected on trigger, touch and use when none of flags above are selected.",
    "You can specify a group of affected players in all trigger fields making it possible to have different action for different players."
  ]
}